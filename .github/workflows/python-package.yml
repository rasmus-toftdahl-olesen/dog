name: package

on:
  release:
    types: [created, edited]
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        if: ${{ github.event_name != 'release' }}
        run: |
          pytest
      - name: Test with pytest (for release)
        if: ${{ github.event_name == 'release' }}
        env:
          DOG_RELEASE_TAG: ${{ github.ref }}
        run: |
          pytest
      - name: Build package
        run: |
          python setup.py sdist bdist_wheel
      - name: Check package
        run: |
          python -m twine check dist/*
      - name: Publish
        if: ${{ github.event_name == 'release' }}
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m twine upload --verbose dist/*
